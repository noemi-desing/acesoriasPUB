// ============================================================
// DIF JALISCO ‚Äî ASISTENTE PUB (Versi√≥n 2025 Mejorada)
// ============================================================

// ==================== CHATBOT ====================

// Base de conocimiento inicial (palabras clave)
const respuestas = [
  { clave: ["curp", "clave √∫nica", "identidad"], respuesta: "Para registrar la CURP, escribe los 18 caracteres tal como aparecen en el documento oficial. Si el beneficiario no cuenta con CURP, deber√°s generar una clave temporal en el sistema conforme al Manual de Asesor√≠a." },
  { clave: ["nombre", "beneficiario", "persona"], respuesta: "El nombre debe escribirse con may√∫scula inicial, sin acentos ni caracteres especiales. Usa un solo espacio entre nombres y apellidos." },
  { clave: ["sexo", "g√©nero", "masculino", "femenino"], respuesta: "Selecciona el c√≥digo correspondiente al g√©nero: 1 para Masculino, 2 para Femenino, conforme al cat√°logo G√âNERO.xlsx." },
  { clave: ["direcci√≥n", "domicilio"], respuesta: "La direcci√≥n debe incluir calle, n√∫mero, colonia y municipio seg√∫n los cat√°logos CLAVE_ENT y CLAVE_MUN." },
  { clave: ["ocupaci√≥n"], respuesta: "El campo OCUPACI√ìN debe llenarse con el c√≥digo indicado en el cat√°logo OCUPACION.xlsx. Si el beneficiario no tiene ocupaci√≥n, deja el campo en blanco o usa el c√≥digo 99 seg√∫n la gu√≠a." },
  { clave: ["escolaridad"], respuesta: "Selecciona el nivel educativo conforme al cat√°logo ESCOLARIDAD.xlsx. Verifica que coincida con el c√≥digo oficial." },
  { clave: ["grupo √©tnico"], respuesta: "Usa el c√≥digo correcto del cat√°logo GRUPO_ETNICO.xlsx seg√∫n el grupo de pertenencia. Si no aplica, deja el campo vac√≠o." },
  { clave: ["discapacidad"], respuesta: "Indica el tipo de discapacidad seg√∫n el cat√°logo DISCAPACIDAD.xlsx, usando el c√≥digo correspondiente." },
  { clave: ["parentesco"], respuesta: "Registra el parentesco del beneficiario con el titular, conforme al cat√°logo PARENTESCO.xlsx." },
  { clave: ["vivienda"], respuesta: "Selecciona el tipo de vivienda de acuerdo con el cat√°logo TIPO_VIVIENDA.xlsx." },
  { clave: ["manual", "asesor√≠a"], respuesta: "Puedes consultar el documento 'MANUAL_ACESORIA_PUB.docx' para ejemplos completos del llenado." },
  { clave: ["instrucciones", "llenado"], respuesta: "Revisa el archivo 'INSTRUCCIONES_LLENADO_PUB.xlsx' dentro de la carpeta CATALOGOS para conocer la descripci√≥n de cada campo del PUB." },
  { clave: ["plantilla", "pub", "formato"], respuesta: "Descarga la PLANTILLA_PUB.xlsx disponible en la secci√≥n de Cat√°logos para comenzar tu registro." },
  { clave: ["error", "validar", "archivo"], respuesta: "Puedes usar el validador inteligente m√°s abajo para revisar si tu archivo PUB tiene los campos completos y bien estructurados." },
  { clave: ["hola", "buenas", "buenos d√≠as"], respuesta: "¬°Hola! üòä Soy tu asistente DIF Jalisco. Puedo ayudarte a llenar el PUB o validar tus archivos. Escribe tu pregunta." },
  { clave: ["gracias", "ok", "excelente"], respuesta: "¬°Con gusto! Si tienes otra duda sobre el llenado del PUB, escr√≠bela aqu√≠ mismo." },
];

// Inicializar Fuse.js para coincidencias difusas
const fuse = new Fuse(respuestas, {
  keys: ["clave"],
  threshold: 0.3, // Tolerancia a errores ortogr√°ficos o similares
});

// Elementos del DOM
const chatOutput = document.getElementById("chatOutput");
const userInput = document.getElementById("userInput");
const sendBtn = document.getElementById("sendBtn");
const clearBtn = document.getElementById("clearChat");

// Funci√≥n para agregar mensajes al chat
function agregarMensaje(texto, clase) {
  const div = document.createElement("div");
  div.classList.add(clase);
  div.textContent = texto;
  chatOutput.appendChild(div);
  chatOutput.scrollTop = chatOutput.scrollHeight;
}

// Funci√≥n para generar respuesta del bot
function responder(mensajeUsuario) {
  const resultados = fuse.search(mensajeUsuario.toLowerCase());
  let respuesta =
    resultados.length > 0
      ? resultados[0].item.respuesta
      : "Lo siento, no tengo informaci√≥n sobre eso a√∫n. Puedes revisar el manual de asesor√≠a o el cat√°logo correspondiente. Estoy aprendiendo constantemente.";

  // Simulaci√≥n de escritura (efecto typing)
  setTimeout(() => {
    agregarMensaje(respuesta, "bot-message");
  }, 600);
}

// Enviar mensaje al presionar bot√≥n
sendBtn.addEventListener("click", () => {
  const texto = userInput.value.trim();
  if (texto === "") return;
  agregarMensaje(texto, "user-message");
  responder(texto);
  userInput.value = "";
});

// Enviar mensaje con Enter
userInput.addEventListener("keypress", (e) => {
  if (e.key === "Enter") {
    sendBtn.click();
  }
});

// Borrar historial del chat
clearBtn.addEventListener("click", () => {
  chatOutput.innerHTML = '<div class="bot-message">üßπ Historial borrado. Puedes comenzar una nueva consulta.</div>';
});

// ==================== VALIDADOR DE ARCHIVOS ====================

const fileInput = document.getElementById("fileInput");
const validateBtn = document.getElementById("validateBtn");
const validationResult = document.getElementById("validationResult");

validateBtn.addEventListener("click", () => {
  const file = fileInput.files[0];
  if (!file) {
    validationResult.textContent = "Por favor, selecciona un archivo antes de validar.";
    return;
  }

  const reader = new FileReader();
  reader.onload = function (e) {
    const data = new Uint8Array(e.target.result);
    const workbook = XLSX.read(data, { type: "array" });
    const primeraHoja = workbook.SheetNames[0];
    const hoja = workbook.Sheets[primeraHoja];
    const datos = XLSX.utils.sheet_to_json(hoja, { header: 1 });

    // Validaci√≥n b√°sica: columnas requeridas
    const encabezados = datos[0];
    const requeridos = ["CURP", "NOMBRE", "SEXO", "EDAD", "OCUPACION"];
    const faltantes = requeridos.filter((campo) => !encabezados.includes(campo));

    if (faltantes.length === 0) {
      validationResult.innerHTML = `<p style="color:green;"><b>‚úÖ Archivo v√°lido.</b> Todos los campos requeridos est√°n presentes.</p>`;
    } else {
      validationResult.innerHTML = `<p style="color:red;"><b>‚ö†Ô∏è Campos faltantes:</b> ${faltantes.join(", ")}</p>`;
    }
  };
  reader.readAsArrayBuffer(file);
});
